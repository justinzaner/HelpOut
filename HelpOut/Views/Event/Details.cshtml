@using Microsoft.AspNet.Identity
@model HelpOut.Models.Event

@{
    ViewBag.Title = Model.Name;
    
}

<h3>Event Details</h3>

<div class="row">
    <div class="col-md-3">
        <h1>@Model.Name</h1>
        by @Model.Organization.FullName

        <h4>
            When: @Model.DateTime <br />
            Where: @Model.Address <br />
        </h4>
    </div>

    <div class="col-md-3">
        @if (Model.FilePaths.Any(f => f.FileType == FileType.Photo))
        {
            
                @Model.FilePaths.FirstOrDefault(f => f.FileType == FileType.Photo).FileName
                <br />
                <img src="~/Content/Images/@Model.FilePaths.FirstOrDefault(f => f.FileType == FileType.Photo).FileName" 
                     style="height:200px; width:200px" alt="img" />
        }  
    </div>
    <div class="col-md-3">
        <br />

        @if (Model.OrganizationID == User.Identity.GetUserId())
        {
            @Html.ActionLink("Edit Event", "Edit", new { id = Model.EventID }, new { @class = "btn btn-default btn-block" })
            @Html.ActionLink("Delete Event", "Delete", new { id = Model.EventID }, new { @class = "btn btn-danger btn-block" })
        }

        else if (!User.IsInRole("Organization"))
        {
            using (@Html.BeginForm("Details", "Event", new { eventID = Model.EventID, volunteerID = User.Identity.GetUserId() }))
            {
                @Html.AntiForgeryToken()

                ViewBag.rsvpText = ViewBag.Attending ? "Attending!" : "RSVP!";
                <input type="submit" class="btn btn-default btn-block" value=@ViewBag.rsvpText />
            }
        }
    </div>

</div>

<hr />
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script>
    var lat, lng;
    var geocoder = new google.maps.Geocoder();
    var address = '@Model.getAddress()';

    geocoder.geocode({ 'address': address }, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
            lat = results[0].geometry.location.lat();
            lng = results[0].geometry.location.lng();
        }
    });
    function initialize() {
        var mapProp = {
            center: new google.maps.LatLng(lat, lng),
            zoom: 16,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(lat, lng),
        });

        marker.setMap(map);

    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>
<div id="googleMap" style="width:500px;height:380px;"></div>
<aside>
    <div class="sidebar bg-grayDark" style="overflow: hidden; outline: none; margin-left: -210px;">
        <ul>
            @foreach (var u in Model.Attendees)
            {
                <li>@u.FullName</li>
            }
        </ul>
    </div>
</aside>

<div class="row">
    <div class="col-xs-12">
        <h2>Description</h2>
        @Model.Description
    </div>
</div>
<br />
<br />
<hr />
<div class="row col-xs-12">
    @Html.ActionLink("List of Events", "Index")
</div>

    @Html.ActionLink("Print Attendance Roster", "GeneratePDF", new { id = Model.EventID })
</div>
